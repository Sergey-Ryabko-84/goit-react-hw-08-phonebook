{"version":3,"file":"static/js/973.653e36fe.chunk.js","mappings":"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","sources":["components/EditContact/EditContactForm.styled.js","components/EditContact/EditContactForm.jsx","pages/EditContact/EditContact.styled.js","pages/EditContact/EditContact.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 0 30px 16px 30px;\n  width: 300px;\n`;\n\nexport const InputWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  height: 60px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: #212735d0;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 28px;\n  margin: 8px 0;\n  padding-left: 36px;\n  font-weight: 500;\n  color: #212735;\n  background-color: #eff2fa;\n  border-radius: 4px;\n  border: 1px solid #a0a0a050;\n  outline: none;\n\n  :focus {\n    border: 2px solid #2b407580;\n  }\n`;\n\nexport const FilterIcon = styled.div`\n  position: absolute;\n  left: 8px;\n  height: 44px;\n  display: flex;\n  align-items: center;\n  color: #212735;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  width: 240px;\n  margin: 0 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #c20d00;\n  text-shadow: 0 0 8px #ffffff80;\n`;\n\nexport const SubmitButton = styled.button`\n  margin: 8px auto;\n  padding: 0 12px;\n  width: 100%;\n  height: 30px;\n  font-weight: 700;\n  color: #212735d0;\n  background-color: #c1c9d9;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 5px 1px;\n\n  :hover,\n  :focus {\n    color: #c1c9d9;\n    background-color: #212735;\n    box-shadow: rgba(0, 0, 0, 0.7) 0px 2px 5px 1px;\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { updateContact } from 'redux/contacts/operations';\nimport {\n  FormWrapper,\n  InputWrapper,\n  InputLabel,\n  Input,\n  FilterIcon,\n  ErrorMsg,\n  SubmitButton,\n} from './EditContactForm.styled';\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}?$/;\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'invalid name format').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'invalid phone number format')\n    .required(),\n});\n\nexport const EditContactForm = contact => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { id, name, number } = location.state.from.contact;\n  const initialValues = {\n    id,\n    name,\n    number,\n  };\n  const { items } = useSelector(selectContacts);\n\n  const onSubmit = (values, { resetForm }) => {\n    const contacts = [...items];\n    contacts.splice(\n      items.findIndex(element => element.id === values.id),\n      1\n    );\n\n    if (\n      contacts.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.trim().toLowerCase()\n      )\n    )\n      return toast.error(`${values.name} is already in contacts.`);\n\n    dispatch(updateContact(values))\n      .unwrap()\n      .then(({ name }) => {\n        toast.success(`Contact edited successfully`);\n        navigate('/contacts');\n      })\n      .catch(error => {\n        toast.error(\n          'Oops... Something went wrong. Please refresh the page and try again!'\n        );\n        console.log('Error: ', error);\n        resetForm();\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={schema}\n    >\n      <FormWrapper>\n        <InputWrapper>\n          <InputLabel htmlFor=\"name\">\n            <FilterIcon>\n              <FiUser size={22} />\n            </FilterIcon>\n            <Input type=\"text\" name=\"name\" placeholder=\"name\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"name\" />\n        </InputWrapper>\n        <InputWrapper>\n          <InputLabel htmlFor=\"number\">\n            <FilterIcon>\n              <FiPhone size={20} />\n            </FilterIcon>\n            <Input type=\"tel\" name=\"number\" placeholder=\"phone number\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"number\" />\n        </InputWrapper>\n        <SubmitButton type=\"submit\">Edit contact</SubmitButton>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const EditContactWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 82px;\n`;\n","import { Helmet } from 'react-helmet';\nimport { EditContactForm } from 'components/EditContact/EditContactForm';\nimport { EditContactWrapper } from './EditContact.styled';\n\nexport default function EditContact() {\n  return (\n    <EditContactWrapper>\n      <Helmet>\n        <title>EditContact</title>\n      </Helmet>\n      <EditContactForm />\n    </EditContactWrapper>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectUndelete = state => state.undelete;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ items }, filter) =>\n    items\n      ? items.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : items\n);\n"],"names":["FormWrapper","styled","Form","InputWrapper","InputLabel","Input","Field","FilterIcon","ErrorMsg","ErrorMessage","SubmitButton","schema","yup","shape","name","matches","required","number","EditContactForm","contact","dispatch","useDispatch","navigate","useNavigate","useLocation","state","from","initialValues","id","items","useSelector","selectContacts","onSubmit","values","resetForm","contacts","splice","findIndex","element","some","toLowerCase","trim","toast","updateContact","unwrap","then","catch","error","console","log","validationSchema","htmlFor","size","type","placeholder","component","EditContactWrapper","EditContact","Helmet","selectFilter","filter","selectUndelete","undelete","selectVisibleContacts","createSelector","includes"],"sourceRoot":""}