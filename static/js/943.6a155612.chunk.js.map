{"version":3,"file":"static/js/943.6a155612.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/Contact.styled.js","components/ContactList/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/UndeletePanel/UndeletePanel.styled.js","components/UndeletePanel/UndeletePanel.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectUndelete = state => state.undelete;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ items }, filter) =>\n    items\n      ? items.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : items\n);\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* flex-wrap: wrap; */\n\n  width: 100%;\n  height: 94px;\n  margin: 16px 0;\n  padding: 12px 20px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: #2b40554d 0px 6px 16px 0px;\n  /* box-shadow: rgba(0, 0, 0, 0.25) 0px 6px 16px 0px; */\n`;\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  color: #fff;\n  background-color: #2b4055d0;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(99, 99, 99, 0.7) 0px 2px 5px 0px;\n\n  :hover {\n    background-color: #2b4055f0;\n    box-shadow: rgba(99, 99, 99, 0.9) 0px 2px 5px 1px;\n  }\n  :disabled {\n    background-color: #2b405580;\n    box-shadow: rgba(99, 99, 99, 0.4) 0px 2px 5px 0px;\n  }\n`;\n\nexport const Text = styled.p`\n  /* flex-grow: 1; */\n  padding: 4px 0;\n  margin: 0 8px;\n\n  :first-of-type {\n    /* flex-grow: 0; */\n    font-weight: 500;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 64px;\n  height: 64px;\n  /* overflow: hidden; */\n  background-color: #2b40554d;\n  border-radius: 50%;\n\n  ::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    background-color: #0080ff;\n    background-color: #bfc5cc;\n    border-radius: 50%;\n    border: solid 4px #fff;\n  }\n`;\n\nexport const ContactInfo = styled.div`\n  flex-grow: 1;\n  margin: 0 24px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FiTrash2 } from 'react-icons/fi';\nimport { removeContact } from 'redux/contacts/contactsSlice';\nimport { selectUndelete } from 'redux/contacts/selectors';\nimport {\n  isModalOpen,\n  setTimerCounter,\n  setContactId,\n} from 'redux/contacts/undeleteSlice';\nimport {\n  ContactItem,\n  Text,\n  DeleteButton,\n  ImgWrapper,\n  ContactInfo,\n} from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { modalIsOpen } = useSelector(selectUndelete);\n  const counterValue = 5;\n\n  const onDelete = e => {\n    const { id } = e.currentTarget;\n    dispatch(removeContact(id));\n    dispatch(setContactId(id));\n    dispatch(setTimerCounter(counterValue));\n    dispatch(isModalOpen(true));\n  };\n\n  return (\n    <ContactItem>\n      <ImgWrapper></ImgWrapper>\n      <ContactInfo>\n        <Text>{contact.name}:</Text>\n        <Text>{contact.number}</Text>\n      </ContactInfo>\n      <DeleteButton\n        type=\"button\"\n        disabled={modalIsOpen}\n        id={contact.id}\n        onClick={onDelete}\n      >\n        <FiTrash2 size={18} />\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 520px;\n  padding: 0 30px;\n  transform: scale(0.9) translateY(-10%);\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Contact } from './Contact';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts)\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  margin-top: 30px;\n  padding: 0 30px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  height: 28px;\n  margin: 8px 0;\n  border-radius: 4px;\n  border: 1px solid #a0a0a050;\n  outline: none;\n\n  :focus {\n    border: 2px solid #2b407580;\n  }\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterWrapper, FilterInput, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterHandler = e => dispatch(setFilter(e.currentTarget.value.trim()));\n\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor=\"filter\">\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          onChange={filterHandler}\n          value={filter}\n        />\n      </FilterLabel>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  text-align: center;\n  color: #2b4055;\n  background-color: #e4e7ea;\n  box-shadow: rgba(99, 99, 99, 0.7) 0px -2px 5px 0px;\n  animation: isAppearing 500ms ease-in-out;\n\n  @keyframes isAppearing {\n    0% {\n      transform: translateY(100%);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  padding: 0 12px;  \n  min-height: 30px;\n  color: #fff;\n  background-color: #2b4055d0;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(99, 99, 99, 0.7) 0px 2px 5px 0px;\n\n  :hover {\n    background-color: #2b4055f0;\n    box-shadow: rgba(99, 99, 99, 0.9) 0px 2px 5px 1px;\n  }\n`;\n\nexport const Timer = styled.span`\n  padding: 0 4px;\n  color: #2b4055d0;\n  font-weight: 700;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  margin: 16px;\n  font-weight: 500;\n`;\n\nexport const Post = styled.p`\n  position: absolute;\n  bottom: -6px;\n  /* left: calc(16px + 390px / 2); */\n  left: calc(50% - 111px / 2);\n  transform: translateX(-50%);\n  margin-top: 0;\n  font-size: 10px;\n  color: #2b4055b0;\n`;\n\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectUndelete } from 'redux/contacts/selectors';\nimport {\n  isModalOpen,\n  setContactId,\n  setTimerCounter,\n} from 'redux/contacts/undeleteSlice';\nimport {\n  ModalWrapper,\n  Wrapper,\n  Button,\n  Timer,\n  Text,\n  Post,\n} from './UndeletePanel.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const UndeletePanel = () => {\n  const dispatch = useDispatch();\n  const { timerCounter, contactId } = useSelector(selectUndelete);\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      if (timerCounter <= 0) {\n        dispatch(isModalOpen(false));\n        dispatch(deleteContact(contactId));\n      }\n      dispatch(setTimerCounter(timerCounter - 1));\n    }, 1000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [contactId, dispatch, timerCounter]);\n\n  useEffect(() => {\n    const deleteContactFromDB = e => {\n      if (e.code === 'Escape') {\n        dispatch(isModalOpen(false));\n        dispatch(deleteContact(contactId));\n      }\n    };\n\n    window.addEventListener('keydown', deleteContactFromDB);\n    return () => {\n      window.removeEventListener('keydown', deleteContactFromDB);\n    };\n  }, [contactId, dispatch]);\n\n  const undoDelete = () => {\n    dispatch(fetchContacts());\n    dispatch(isModalOpen(false));\n    dispatch(setContactId(null));\n  };\n\n  return createPortal(\n    <ModalWrapper>\n      <Wrapper>\n        <Text>\n          The contact will be permanently deleted in\n          <Timer>{timerCounter}</Timer>\n          seconds\n        </Text>\n        <Button type=\"button\" onClick={undoDelete}>\n          Undo delete\n        </Button>\n      </Wrapper>\n      <Post>instant deletion by clicking on Esc</Post>\n    </ModalWrapper>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin-left: 30px;\n  margin-bottom: 12px;\n  font-size: 24px;\n  font-weight: 700;\n  color: #2b4055b0;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerWrapper } from './Loader.styled';\n\nexport const Loader = () => (\n  <SpinnerWrapper>\n    Loading\n    <RotatingLines\n      strokeColor=\"#2b4055d0\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"36\"\n      visible={true}\n    />\n  </SpinnerWrapper>\n);","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 30px;\n  max-width: 500px;\n  min-height: 300px;\n  background-color: #2b405520;\n  background-color: #ffffff40;\n  border-radius: 4px;\n  box-shadow: rgba(99, 99, 99, 0.7) 0px 2px 5px 0px;\n`;\n\nexport const InputWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  height: 82px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: #2b4055d0;\n`;\n\nexport const Input = styled(Field)`  \n  width: 240px;\n  height: 28px;\n  margin: 8px 0;\n  border-radius: 4px;\n  border: 1px solid #a0a0a050;\n  outline: none;\n\n  :focus {\n    border: 2px solid #2b407580;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  width: 240px;\n  margin-left: 30px;\n  color: red;\n`;\n\nexport const SubmitButton = styled.button`\n  margin: auto;\n  padding: 0 12px;\n  height: 30px;\n  color: #fff;\n  background-color: #2b4055d0;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(99, 99, 99, 0.7) 0px 2px 5px 0px;\n\n  :hover {\n    background-color: #2b4055f0;\n    box-shadow: rgba(99, 99, 99, 0.9) 0px 2px 5px 1px;\n  }\n`;","import { Formik  } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  FormWrapper,\n  InputWrapper,\n  InputLabel,\n  Input,\n  ErrorMsg,\n  SubmitButton,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}?$/;\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe('), dash and spaces\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const onSubmit = (values, { resetForm }) => {\n    if (\n      items.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.trim().toLowerCase()\n      )\n    )\n      return toast.error(`${values.name} is already in contacts.`);\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={schema}\n    >\n      <FormWrapper>\n        <InputWrapper>\n          <InputLabel htmlFor=\"name\">\n            <FiUser size={22} />\n            <Input type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"name\" />\n        </InputWrapper>\n        <InputWrapper>\n          <InputLabel htmlFor=\"number\">\n            <FiPhone size={20} />\n            <Input type=\"tel\" name=\"number\" placeholder=\"Enter phone number\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"number\" />\n        </InputWrapper>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectUndelete } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { UndeletePanel } from 'components/UndeletePanel/UndeletePanel';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const { modalIsOpen } = useSelector(selectUndelete);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      {items.length > 0 && <ContactList />}\n      {isLoading && !error && <Loader />}\n      {error && <p>{error}</p>}\n      {modalIsOpen && <UndeletePanel />}\n    </div>\n  );\n};\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectUndelete","undelete","selectVisibleContacts","createSelector","items","contact","name","toLowerCase","includes","ContactItem","styled","DeleteButton","Text","ImgWrapper","ContactInfo","Contact","dispatch","useDispatch","modalIsOpen","useSelector","number","type","disabled","id","onClick","e","currentTarget","removeContact","setContactId","setTimerCounter","isModalOpen","size","List","ContactList","visibleContacts","map","FilterWrapper","FilterInput","FilterLabel","Filter","htmlFor","onChange","setFilter","value","trim","ModalWrapper","Wrapper","Button","Timer","Post","modalRoot","document","querySelector","UndeletePanel","timerCounter","contactId","useEffect","timerId","setInterval","deleteContact","clearInterval","deleteContactFromDB","code","window","addEventListener","removeEventListener","createPortal","fetchContacts","SpinnerWrapper","Loader","strokeColor","strokeWidth","animationDuration","width","visible","FormWrapper","Form","InputWrapper","InputLabel","Input","Field","ErrorMsg","ErrorMessage","SubmitButton","initialValues","schema","yup","shape","matches","required","ContactForm","onSubmit","values","resetForm","some","toast","addContact","validationSchema","placeholder","component","Contacts","isLoading","error","Helmet","length"],"sourceRoot":""}