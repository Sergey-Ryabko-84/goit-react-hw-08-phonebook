{"version":3,"file":"static/js/883.7e623e51.chunk.js","mappings":"0RAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uRAeXE,EAAYF,EAAAA,GAAAA,GAAH,mJAUTG,EAAeH,EAAAA,GAAAA,MAAH,sFAMZI,EAAaJ,EAAAA,GAAAA,MAAH,gJASVK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,sSAiBLO,EAAaP,EAAAA,GAAAA,IAAH,2IASVQ,GAAWR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,0JASRU,EAAeV,EAAAA,GAAAA,OAAH,6Y,UC5DnBW,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAQJC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,KAAMG,EAAAA,KAAaE,QAHF,yHAGsB,uBAAuBC,WAC9DL,OAAQE,EAAAA,KAELE,QARH,gFAQwB,+BACrBC,aAGQC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAAtBF,MAuBR,OACE,SAAC,KAAD,CACEX,cAAeA,EACfc,SAxBa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1B,GACEL,EAAMM,MACJ,SAAAC,GAAO,OACLA,EAAQjB,KAAKkB,gBAAkBJ,EAAOd,KAAKmB,OAAOD,aAD7C,IAIT,OAAOE,EAAAA,GAAAA,MAAA,UAAeN,EAAOd,KAAtB,6BAETQ,GAASa,EAAAA,EAAAA,IAAWP,IACjBQ,SACAC,MAAK,gBAAGvB,EAAH,EAAGA,KAAH,OAAcoB,EAAAA,GAAAA,QAAA,UAAiBpB,EAAjB,+BAAd,IACLwB,OAAM,SAAAC,GACLL,EAAAA,GAAAA,MACE,wEAEFM,QAAQC,IAAI,UAAWF,EACxB,IACHV,GACD,EAMGa,iBAAkB1B,EAHpB,UAKE,UAACf,EAAD,YACE,SAACG,EAAD,+BACA,UAACC,EAAD,YACE,UAACC,EAAD,CAAYqC,QAAQ,OAApB,WACE,SAAClC,EAAD,WACE,SAAC,MAAD,CAAQmC,KAAM,QAEhB,SAACrC,EAAD,CAAOsC,KAAK,OAAO/B,KAAK,OAAOgC,YAAY,aAE7C,SAACpC,EAAD,CAAUqC,UAAU,MAAMjC,KAAK,aAEjC,UAACT,EAAD,YACE,UAACC,EAAD,CAAYqC,QAAQ,SAApB,WACE,SAAClC,EAAD,WACE,SAAC,MAAD,CAASmC,KAAM,QAEjB,SAACrC,EAAD,CAAOsC,KAAK,MAAM/B,KAAK,SAASgC,YAAY,qBAE9C,SAACpC,EAAD,CAAUqC,UAAU,MAAMjC,KAAK,eAEjC,SAACF,EAAD,CAAciC,KAAK,SAAnB,6BAIP,C,uGCzFYG,E,QAAoB9C,GAAAA,IAAH,4F,UCEf,SAAS+C,IACtB,OACE,UAACD,EAAD,YACE,SAACE,EAAA,EAAD,WACE,6CAEF,SAAC7B,EAAA,EAAD,MAGL,C,8ICXYK,EAAiB,SAAAyB,GAAK,OAAIA,EAAMC,QAAV,EACtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EACpBC,EAAiB,SAAAJ,GAAK,OAAIA,EAAMK,QAAV,EAEtBC,GAAwBC,EAAAA,EAAAA,IACnC,CAAChC,EAAgB2B,IACjB,WAAYC,GAAZ,IAAG9B,EAAH,EAAGA,MAAH,OACEA,EACIA,EAAM8B,QAAO,SAAAvB,GAAO,OAClBA,EAAQjB,KAAKkB,cAAc2B,SAASL,EAAOtB,cADzB,IAGpBR,CALN,G","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/AddContact/AddContact.styled.js","pages/AddContact/AddContact.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  position: fixed;\n  left: 0;\n  top: calc(64px + 44px + 16px * 2);\n  display: inline-flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 0 30px 16px 30px;\n  width: 300px;\n\n  @media screen and (max-width: 767px) {\n    position: static;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  margin: 0;\n  font-size: 1.2em;\n  color: #eff2fa;\n\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;\n\nexport const InputWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  height: 60px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: #212735d0;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 28px;\n  margin: 8px 0;\n  padding-left: 36px;\n  font-weight: 500;\n  color: #212735;\n  background-color: #eff2fa;\n  border-radius: 4px;\n  border: 1px solid #a0a0a050;\n  outline: none;\n\n  :focus {\n    border: 2px solid #2b407580;\n  }\n`;\n\nexport const FilterIcon = styled.div`\n  position: absolute;\n  left: 8px;\n  height: 44px;\n  display: flex;\n  align-items: center;\n  color: #212735;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  width: 240px;\n  margin: 0 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #c20d00;\n  text-shadow: 0 0 8px #ffffff80;\n`;\n\nexport const SubmitButton = styled.button`\n  margin: 8px auto;\n  padding: 0 12px;\n  width: 100%;\n  height: 30px;\n  font-weight: 700;\n  color: #212735d0;\n  background-color: #c1c9d9;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 5px 1px;\n\n  :hover,\n  :focus {\n    color: #c1c9d9;\n    background-color: #212735;\n    box-shadow: rgba(0, 0, 0, 0.7) 0px 2px 5px 1px;\n  }\n`;","import { Formik  } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  FormWrapper,\n  FormTitle,\n  InputWrapper,\n  InputLabel,\n  Input,\n  FilterIcon,\n  ErrorMsg,\n  SubmitButton,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}?$/;\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'invalid name format').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'invalid phone number format')\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const onSubmit = (values, { resetForm }) => {\n    if (\n      items.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.trim().toLowerCase()\n      )\n    )\n      return toast.error(`${values.name} is already in contacts.`);\n\n    dispatch(addContact(values))\n      .unwrap()\n      .then(({ name }) => toast.success(`${name}'s contact has been created`))\n      .catch(error => {\n        toast.error(\n          'Oops... Something went wrong. Please refresh the page and try again!'\n        );\n        console.log('Error: ', error);\n      });\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={schema}\n    >\n      <FormWrapper>\n        <FormTitle>Add new contact</FormTitle>\n        <InputWrapper>\n          <InputLabel htmlFor=\"name\">\n            <FilterIcon>\n              <FiUser size={22} />\n            </FilterIcon>\n            <Input type=\"text\" name=\"name\" placeholder=\"name\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"name\" />\n        </InputWrapper>\n        <InputWrapper>\n          <InputLabel htmlFor=\"number\">\n            <FilterIcon>\n              <FiPhone size={20} />\n            </FilterIcon>\n            <Input type=\"tel\" name=\"number\" placeholder=\"phone number\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"number\" />\n        </InputWrapper>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AddContactWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 82px;\n`;\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { AddContactWrapper } from './AddContact.styled';\n\nexport default function AddContact() {\n  return (\n    <AddContactWrapper>\n      <Helmet>\n        <title>AddContact</title>\n      </Helmet>\n      <ContactForm />\n    </AddContactWrapper>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectUndelete = state => state.undelete;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ items }, filter) =>\n    items\n      ? items.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : items\n);\n"],"names":["FormWrapper","styled","Form","FormTitle","InputWrapper","InputLabel","Input","Field","FilterIcon","ErrorMsg","ErrorMessage","SubmitButton","initialValues","name","number","schema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","items","useSelector","selectContacts","onSubmit","values","resetForm","some","contact","toLowerCase","trim","toast","addContact","unwrap","then","catch","error","console","log","validationSchema","htmlFor","size","type","placeholder","component","AddContactWrapper","AddContact","Helmet","state","contacts","selectFilter","filter","selectUndelete","undelete","selectVisibleContacts","createSelector","includes"],"sourceRoot":""}