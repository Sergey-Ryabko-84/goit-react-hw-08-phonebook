{"version":3,"file":"static/js/23.bbf65e74.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/Contact.styled.js","components/ContactList/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/UndeletePanel/UndeletePanel.styled.js","components/UndeletePanel/UndeletePanel.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  position: fixed;\n  left: 0;\n  top: calc(64px + 44px + 16px * 2);\n  display: inline-flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 0 30px 16px 30px;\n  width: 300px;\n\n  @media screen and (max-width: 767px) {\n    position: static;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  margin: 0;\n  font-size: 1.2em;\n  color: #eff2fa;\n\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;\n\nexport const InputWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  height: 60px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: #212735d0;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 28px;\n  margin: 8px 0;\n  padding-left: 36px;\n  font-weight: 500;\n  color: #212735;\n  background-color: #eff2fa;\n  border-radius: 4px;\n  border: 1px solid #a0a0a050;\n  outline: none;\n\n  :focus {\n    border: 2px solid #2b407580;\n  }\n`;\n\nexport const FilterIcon = styled.div`\n  position: absolute;\n  left: 8px;\n  height: 44px;\n  display: flex;\n  align-items: center;\n  color: #212735;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  width: 240px;\n  margin: 0 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #c20d00;\n  text-shadow: 0 0 8px #ffffff80;\n`;\n\nexport const SubmitButton = styled.button`\n  margin: 8px auto;\n  padding: 0 12px;\n  width: 100%;\n  height: 30px;\n  font-weight: 700;\n  color: #212735d0;\n  background-color: #c1c9d9;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 5px 1px;\n\n  :hover,\n  :focus {\n    color: #c1c9d9;\n    background-color: #212735;\n    box-shadow: rgba(0, 0, 0, 0.7) 0px 2px 5px 1px;\n  }\n`;","import { Formik  } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  FormWrapper,\n  FormTitle,\n  InputWrapper,\n  InputLabel,\n  Input,\n  FilterIcon,\n  ErrorMsg,\n  SubmitButton,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}?$/;\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'invalid name format').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'invalid phone number format')\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const onSubmit = (values, { resetForm }) => {\n    if (\n      items.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.trim().toLowerCase()\n      )\n    )\n      return toast.error(`${values.name} is already in contacts.`);\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={schema}\n    >\n      <FormWrapper>\n        <FormTitle>Add new contact</FormTitle>\n        <InputWrapper>\n          <InputLabel htmlFor=\"name\">\n            <FilterIcon>\n              <FiUser size={22} />\n            </FilterIcon>\n            <Input type=\"text\" name=\"name\" placeholder=\"name\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"name\" />\n        </InputWrapper>\n        <InputWrapper>\n          <InputLabel htmlFor=\"number\">\n            <FilterIcon>\n              <FiPhone size={20} />\n            </FilterIcon>\n            <Input type=\"tel\" name=\"number\" placeholder=\"phone number\" />\n          </InputLabel>\n          <ErrorMsg component=\"div\" name=\"number\" />\n        </InputWrapper>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* flex-wrap: wrap; */\n\n  width: 100%;\n  height: 82px;\n  margin: 16px 0;\n  padding: 12px 20px;\n  color: #212735;\n  background-color: #eff2fa;\n  border-radius: 12px;\n  box-shadow: #2127358d 0px 6px 16px 0px;\n  /* box-shadow: rgba(0, 0, 0, 0.25) 0px 6px 16px 0px; */\n`;\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  color: #fff;\n  background-color: #212735d0;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(99, 99, 99, 0.7) 0px 2px 5px 0px;\n\n  :hover {\n    background-color: #212735f0;\n    box-shadow: rgba(99, 99, 99, 0.9) 0px 2px 5px 1px;\n  }\n  :disabled {\n    background-color: #21273580;\n    box-shadow: rgba(99, 99, 99, 0.4) 0px 2px 5px 0px;\n  }\n`;\n\nexport const Text = styled.p`\n  /* flex-grow: 1; */\n  padding: 4px 0;\n  margin: 0;\n\n  :first-of-type {\n    /* flex-grow: 0; */\n    font-weight: 500;\n  }\n\n  a {\n    color: #212735;\n    :hover {\n      color: #486ec8;\n    }\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 56px;\n  height: 56px;\n  /* overflow: hidden; */\n  background-color: #afb4be;\n  border-radius: 50%;\n\n  ::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    display: inline-block;\n    width: 22px;\n    height: 22px;\n    background-color: #afb4be;\n    border-radius: 50%;\n    border: solid 4px #eff2fa;\n  }\n`;\n\nexport const ContactInfo = styled.div`\n  flex-grow: 1;\n  margin: 0 24px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FiTrash2 } from 'react-icons/fi';\nimport { removeContact } from 'redux/contacts/contactsSlice';\nimport { selectUndelete } from 'redux/contacts/selectors';\nimport {\n  isModalOpen,\n  setTimerCounter,\n  setContactId,\n} from 'redux/contacts/undeleteSlice';\nimport {\n  ContactItem,\n  Text,\n  DeleteButton,\n  ImgWrapper,\n  ContactInfo,\n} from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { modalIsOpen } = useSelector(selectUndelete);\n  const counterValue = 5;\n\n  const onDelete = e => {\n    const { id } = e.currentTarget;\n    dispatch(removeContact(id));\n    dispatch(setContactId(id));\n    dispatch(setTimerCounter(counterValue));\n    dispatch(isModalOpen(true));\n  };\n\n  return (\n    <ContactItem>\n      <ImgWrapper></ImgWrapper>\n      <ContactInfo>\n        <Text>{contact.name}</Text>\n        <Text>\n          <a href={`tel:${contact.number}`}>{contact.number}</a>\n        </Text>\n      </ContactInfo>\n      <DeleteButton\n        type=\"button\"\n        disabled={modalIsOpen}\n        id={contact.id}\n        onClick={onDelete}\n      >\n        <FiTrash2 size={18} />\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 460px;\n  padding: 0 30px;\n\n  @media screen and (max-width: 479px) {\n    width: 380px;\n    padding: 0;\n    transform: scale(0.9) translateY(-6.2%);\n  }\n\n  @media screen and (max-width: 379px) {\n    transform: scale(0.8) translateY(-14%);\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Contact } from './Contact';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts)\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 64px;\n  padding: 16px 30px;\n  width: 300px;\n\n  @media screen and (max-width: 767px) {\n    position: static;\n    padding: 30px 0 0 0;\n  }\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  height: 28px;\n  margin: 8px 0;\n  padding-left: 12px;\n  font-weight: 500;\n  color: #212735;\n  background-color: #eff2fa;\n  border-radius: 4px;\n  border: 1px solid #a0a0a050;\n  outline: none;\n\n  :focus {\n    border: 2px solid #2b407580;\n  }\n`;\n\nexport const FilterLabel = styled.label`\n  position: relative;\n  display: flex;\n  font-weight: 500;\n`;\n\nexport const FilterIcon = styled.div`\n  position: absolute;\n  right: 8px;\n  height: 44px;\n  display: flex;\n  align-items: center;\n  color: #212735;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { FiSearch } from 'react-icons/fi';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport {\n  FilterWrapper,\n  FilterInput,\n  FilterLabel,\n  FilterIcon,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterHandler = e => dispatch(setFilter(e.currentTarget.value.trim()));\n\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor=\"filter\">\n        <FilterIcon>\n          <FiSearch />\n        </FilterIcon>\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          onChange={filterHandler}\n          value={filter}\n          placeholder=\"search\"\n        />\n      </FilterLabel>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  text-align: center;\n  color: #eff2fa;\n  background-image: radial-gradient(\n    circle at center,\n    #212735 12%,\n    #21273510 92%\n  );\n  box-shadow: rgba(0, 0, 0, 0.25) 0px -2px 5px 0px;\n  animation: isAppearing 500ms ease-in-out;\n\n  @keyframes isAppearing {\n    0% {\n      transform: translateY(100%);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  padding: 0 12px;\n  min-height: 30px;\n  font-weight: 700;\n  color: #212735d0;\n  background-color: #c1c9d9;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 5px 1px;\n\n  :hover {\n    color: #eff2fa;\n    background-color: #212735;\n    box-shadow: rgba(0, 0, 0, 0.7) 0px 2px 5px 1px;\n  }\n`;\n\nexport const Timer = styled.span`\n  padding: 0 4px;\n  color: #eff2fad0;\n  font-weight: 700;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  margin: 16px;\n  font-weight: 500;\n`;\n\nexport const Post = styled.p`\n  position: absolute;\n  bottom: -6px;\n  /* left: calc(16px + 390px / 2); */\n  left: calc(50% - 111px / 2);\n  transform: translateX(-50%);\n  margin-top: 0;\n  font-size: 10px;\n  color: #c1c9d9b0;\n`;\n\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectUndelete } from 'redux/contacts/selectors';\nimport {\n  isModalOpen,\n  setContactId,\n  setTimerCounter,\n} from 'redux/contacts/undeleteSlice';\nimport {\n  ModalWrapper,\n  Wrapper,\n  Button,\n  Timer,\n  Text,\n  Post,\n} from './UndeletePanel.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const UndeletePanel = () => {\n  const dispatch = useDispatch();\n  const { timerCounter, contactId } = useSelector(selectUndelete);\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      if (timerCounter <= 0) {\n        dispatch(isModalOpen(false));\n        dispatch(deleteContact(contactId));\n      }\n      dispatch(setTimerCounter(timerCounter - 1));\n    }, 1000);\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [contactId, dispatch, timerCounter]);\n\n  useEffect(() => {\n    const deleteContactFromDB = e => {\n      if (e.code === 'Escape') {\n        dispatch(isModalOpen(false));\n        dispatch(deleteContact(contactId));\n      }\n    };\n\n    window.addEventListener('keydown', deleteContactFromDB);\n    return () => {\n      window.removeEventListener('keydown', deleteContactFromDB);\n    };\n  }, [contactId, dispatch]);\n\n  const undoDelete = () => {\n    dispatch(fetchContacts());\n    dispatch(isModalOpen(false));\n    dispatch(setContactId(null));\n  };\n\n  return createPortal(\n    <ModalWrapper>\n      <Wrapper>\n        <Text>\n          The contact will be permanently deleted in\n          <Timer>{timerCounter}</Timer>\n          seconds\n        </Text>\n        <Button type=\"button\" onClick={undoDelete}>\n          Undo delete\n        </Button>\n      </Wrapper>\n      <Post>instant deletion by clicking on Esc</Post>\n    </ModalWrapper>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin-left: 30px;\n  margin-bottom: 12px;\n  font-size: 24px;\n  font-weight: 700;\n  /* color: #212735b0; */\n  color: #c1c9d9;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerWrapper } from './Loader.styled';\n\nexport const Loader = () => (\n  <SpinnerWrapper>\n    Loading\n    <RotatingLines\n      // strokeColor=\"#212735d0\"\n      strokeColor=\"#c1c9d9\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"36\"\n      visible={true}\n    />\n  </SpinnerWrapper>\n);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 0;\n\n  @media screen and (min-width: 768px) and (max-width: 1199px) {\n    margin-left: 250px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectUndelete } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { UndeletePanel } from 'components/UndeletePanel/UndeletePanel';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Wrapper } from './Contacts.styled';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const { modalIsOpen } = useSelector(selectUndelete);\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Filter />\n      {width >= 768 && <ContactForm />}\n      {items.length > 0 && <ContactList />}\n      {isLoading && !error && <Loader />}\n      {error && <p>{error}</p>}\n      {modalIsOpen && <UndeletePanel />}\n    </Wrapper>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectUndelete = state => state.undelete;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ items }, filter) =>\n    items\n      ? items.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : items\n);\n"],"names":["FormWrapper","styled","Form","FormTitle","InputWrapper","InputLabel","Input","Field","FilterIcon","ErrorMsg","ErrorMessage","SubmitButton","initialValues","name","number","schema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","items","useSelector","selectContacts","onSubmit","values","resetForm","some","contact","toLowerCase","trim","toast","addContact","validationSchema","htmlFor","size","type","placeholder","component","ContactItem","DeleteButton","Text","ImgWrapper","ContactInfo","Contact","modalIsOpen","selectUndelete","href","disabled","id","onClick","e","currentTarget","removeContact","setContactId","setTimerCounter","isModalOpen","List","ContactList","visibleContacts","selectVisibleContacts","map","FilterWrapper","FilterInput","FilterLabel","Filter","filter","selectFilter","onChange","setFilter","value","ModalWrapper","Wrapper","Button","Timer","Post","modalRoot","document","querySelector","UndeletePanel","timerCounter","contactId","useEffect","timerId","setInterval","deleteContact","clearInterval","deleteContactFromDB","code","window","addEventListener","removeEventListener","createPortal","fetchContacts","SpinnerWrapper","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Contacts","isLoading","error","useWindowDimensions","Helmet","length","state","contacts","undelete","createSelector","includes"],"sourceRoot":""}